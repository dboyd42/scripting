#!/bin/bash
# Copyright 2020 David Boyd, all rights reserved
# Program: find-dns-servers.sh
# Description:
#       Find the DNS servers for <domain>
# Dependencies: DNSEnum wordlist
# Date: 2020-02-15
# Revised:

# Check if argument was given, if not, print usage
if [ -z "$1" ]; then
    echo "[*] Find DNS Servers"
    echo "[*] Usage    : $0 <domain name> "
    exit 0
fi

# Define variables
domain="$1"
w3="www."

# Determine if argument has 'www.'
case "$1" in
    *www.*)
        domain=${1/#$w3}
        w3domain="$1"
        classC_IP=$(host $1 | cut -d' ' -f4 | cut -d'.' -f1-3)
        ;;
    *)
        domain="$1"
        w3domain="$w3$1"
        classC_IP=$(host $w3$1 | cut -d' ' -f4 | cut -d'.' -f1-3)
        ;;
esac

# Brute force lookup with DNSEnum server wordlist
clear
read -p "Do a server wordlist lookup? [y/n] " yesNo

if [ "$yesNo" = "y" ]; then
    echo -e "\nBrute Force lookup with 'Server' Wordlist"
    echo "-----------------------------------------"
    for server in $(cat /usr/share/dnsenum/dns.txt); do
        host $server.$domain | grep -v "not found"
    done
fi

# Prompt for a reverse lookup
echo
read -p "Do a Class C Reverse Lookup? [y/n]" yesNo

if [ "$yesNo" = "y" ]; then
    read -p "Enter beginning IP sequence (0-254): " start
    read -p "Enter ending    IP sequence (1-255): " end
    echo -e "\nBrute Force Reverse Lookup $classC_IP.($start-$end)"
    echo "--------------------------------------------"
    for ip in $(seq $start $end); do
        host $classC_IP.$ip | grep -v "not found"
    done
fi

echo -e "\nThank you! And Goodnight!"
